{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_minUSD",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "funder",
          "type": "address"
        }
      ],
      "name": "getAddressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMinimumUSD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "s_funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x8863dec88a6e8e033ff9795522b54af922132b5310864efc3a14c3f8a9108ff8",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "928111",
    "logsBloom": "0x
    "blockHash": "0x24285747fa81aacec1a2c5ee2add72613306c91a8a8cd9fd5bc235b8a2344722",
    "transactionHash": "0x8863dec88a6e8e033ff9795522b54af922132b5310864efc3a14c3f8a9108ff8",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "928111",
    "status": 1,
    "byzantium": true
  },
  "args": [
    50,
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "5b722a0f6a44f70fa463240eda9255da",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_minUSD\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMinimumUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"s_funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror FundMe__NotOwner();\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    uint256 private immutable i_minUSD;\\n    address private immutable i_owner;\\n    address[] public s_funders;\\n    mapping(address => uint256) private s_addressAmountMap;\\n    AggregatorV3Interface private immutable i_priceFeed;\\n\\n    modifier onlyOwner() {\\n        // require(msg.sender == i_owner, \\\"You are not the owner\\\");\\n        if (msg.sender != i_owner) revert FundMe__NotOwner();\\n        _;\\n    }\\n\\n    constructor(uint256 _minUSD, address _priceFeedAddress) {\\n        i_owner = msg.sender;\\n        i_minUSD = _minUSD * 1e18;\\n        i_priceFeed = AggregatorV3Interface(_priceFeedAddress);\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    function fund() public payable {\\n        require(\\n            msg.value.getConversion(i_priceFeed) >= i_minUSD,\\n            \\\"You need to spend more ETH\\\"\\n        );\\n        s_funders.push(msg.sender);\\n        s_addressAmountMap[msg.sender] += msg.value;\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        // for (uint256 i = 0; i < s_funders.length; i++) {\\n        //     s_addressAmountMap[s_funders[i]] = 0;\\n        // }\\n        // s_funders = new address[](0);\\n        // (bool callSend, ) = payable(msg.sender).call{\\n        //     value: address(this).balance\\n        // }(\\\"\\\");\\n        // require(callSend, \\\"Withdrawal failed.\\\");\\n\\n        address[] memory funders = s_funders;\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = funders[funderIndex];\\n            s_addressAmountMap[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n        (bool callSend, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSend, \\\"Withdrawal failed.\\\");\\n    }\\n\\n    function getMinimumUSD() public view returns (uint256) {\\n        return i_minUSD;\\n    }\\n\\n    function getOwner() public view returns (address) {\\n        return i_owner;\\n    }\\n\\n    function getFunder(uint256 index) public view returns (address) {\\n        return s_funders[index];\\n    }\\n\\n    function getAddressToAmountFunded(address funder)\\n        public\\n        view\\n        returns (uint256)\\n    {\\n        return s_addressAmountMap[funder];\\n    }\\n\\n    function getPriceFeed() public view returns (AggregatorV3Interface) {\\n        return i_priceFeed;\\n    }\\n}\\n\",\"keccak256\":\"0xd591085b40af2e7394cb906ff54c192783f501fb0f57f700ed305280d73d607e\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n    // get 1 eth price in usd\\n    function getPriceInUSD(AggregatorV3Interface priceFeed)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        (, int256 price, , , ) = priceFeed.latestRoundData();\\n        // will get price with 8 extra zeros\\n        return uint256(price * 1e10);\\n    }\\n\\n    // get x amount of eth in usd\\n    function getConversion(uint256 ethAmount, AggregatorV3Interface priceFeed)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        uint256 priceInUSD = getPriceInUSD(priceFeed);\\n        uint256 amount = (priceInUSD * ethAmount) / 1e18;\\n        return amount;\\n    }\\n}\\n\",\"keccak256\":\"0xeb13ba4e275492a6405d3f143fe07e36f6b4646a949ddaded82338b7569014dc\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60e06040523480156200001157600080fd5b5060405162001251380380620012518339818101604052810190620000379190620000f8565b3373ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff1660601b81525050670de0b6b3a7640000826200008491906200013f565b608081815250508073ffffffffffffffffffffffffffffffffffffffff1660c08173ffffffffffffffffffffffffffffffffffffffff1660601b81525050505062000246565b600081519050620000db8162000212565b92915050565b600081519050620000f2816200022c565b92915050565b600080604083850312156200011257620001116200020d565b5b60006200012285828601620000e1565b92505060206200013585828601620000ca565b9150509250929050565b60006200014c82620001d4565b91506200015983620001d4565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615620001955762000194620001de565b5b828202905092915050565b6000620001ad82620001b4565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600080fd5b6200021d81620001a0565b81146200022957600080fd5b50565b6200023781620001d4565b81146200024357600080fd5b50565b60805160a05160601c60c05160601c610fc06200029160003960008181610217015261069901526000818161038c01526106710152600081816101f301526106c10152610fc06000f3fe60806040526004361061007f5760003560e01c80639e87a5cd1161004e5780639e87a5cd14610154578063b60d42881461017f578063ba19e6c314610189578063d7b4750c146101b45761008e565b80630343fb25146100985780633ccfd60b146100d557806354861af7146100ec578063893d20e8146101295761008e565b3661008e5761008c6101f1565b005b6100966101f1565b005b3480156100a457600080fd5b506100bf60048036038101906100ba9190610918565b610341565b6040516100cc9190610b0e565b60405180910390f35b3480156100e157600080fd5b506100ea61038a565b005b3480156100f857600080fd5b50610113600480360381019061010e9190610945565b61062e565b6040516101209190610a98565b60405180910390f35b34801561013557600080fd5b5061013e61066d565b60405161014b9190610a98565b60405180910390f35b34801561016057600080fd5b50610169610695565b6040516101769190610ab3565b60405180910390f35b6101876101f1565b005b34801561019557600080fd5b5061019e6106bd565b6040516101ab9190610b0e565b60405180910390f35b3480156101c057600080fd5b506101db60048036038101906101d69190610945565b6106e5565b6040516101e89190610a98565b60405180910390f35b7f00000000000000000000000000000000000000000000000000000000000000006102457f00000000000000000000000000000000000000000000000000000000000000003461072c90919063ffffffff16565b1015610286576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027d90610aee565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546103389190610b45565b92505081905550565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461040f576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008080548060200260200160405190810160405280929190818152602001828054801561049257602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610448575b5050505050905060005b815181101561051d5760008282815181106104ba576104b9610e76565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061051590610dcf565b91505061049c565b50600067ffffffffffffffff81111561053957610538610ea5565b5b6040519080825280602002602001820160405280156105675781602001602082028036833780820191505090505b506000908051906020019061057d929190610808565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516105a490610a83565b60006040518083038185875af1925050503d80600081146105e1576040519150601f19603f3d011682016040523d82523d6000602084013e6105e6565b606091505b505090508061062a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062190610ace565b60405180910390fd5b5050565b6000818154811061063e57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b60008082815481106106fa576106f9610e76565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008061073883610768565b90506000670de0b6b3a764000085836107519190610ce3565b61075b9190610b9b565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156107b157600080fd5b505afa1580156107c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107e99190610972565b5050509150506402540be400816108009190610bcc565b915050919050565b828054828255906000526020600020908101928215610881579160200282015b828111156108805782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610828565b5b50905061088e9190610892565b5090565b5b808211156108ab576000816000905550600101610893565b5090565b6000813590506108be81610f2e565b92915050565b6000815190506108d381610f45565b92915050565b6000813590506108e881610f5c565b92915050565b6000815190506108fd81610f5c565b92915050565b60008151905061091281610f73565b92915050565b60006020828403121561092e5761092d610ed4565b5b600061093c848285016108af565b91505092915050565b60006020828403121561095b5761095a610ed4565b5b6000610969848285016108d9565b91505092915050565b600080600080600060a0868803121561098e5761098d610ed4565b5b600061099c88828901610903565b95505060206109ad888289016108c4565b94505060406109be888289016108ee565b93505060606109cf888289016108ee565b92505060806109e088828901610903565b9150509295509295909350565b6109f681610d3d565b82525050565b610a0581610d99565b82525050565b6000610a18601283610b34565b9150610a2382610ed9565b602082019050919050565b6000610a3b601a83610b34565b9150610a4682610f02565b602082019050919050565b6000610a5e600083610b29565b9150610a6982610f2b565b600082019050919050565b610a7d81610d79565b82525050565b6000610a8e82610a51565b9150819050919050565b6000602082019050610aad60008301846109ed565b92915050565b6000602082019050610ac860008301846109fc565b92915050565b60006020820190508181036000830152610ae781610a0b565b9050919050565b60006020820190508181036000830152610b0781610a2e565b9050919050565b6000602082019050610b236000830184610a74565b92915050565b600081905092915050565b600082825260208201905092915050565b6000610b5082610d79565b9150610b5b83610d79565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610b9057610b8f610e18565b5b828201905092915050565b6000610ba682610d79565b9150610bb183610d79565b925082610bc157610bc0610e47565b5b828204905092915050565b6000610bd782610d4f565b9150610be283610d4f565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610c2157610c20610e18565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610c5e57610c5d610e18565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610c9b57610c9a610e18565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610cd857610cd7610e18565b5b828202905092915050565b6000610cee82610d79565b9150610cf983610d79565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610d3257610d31610e18565b5b828202905092915050565b6000610d4882610d59565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b6000610da482610dab565b9050919050565b6000610db682610dbd565b9050919050565b6000610dc882610d59565b9050919050565b6000610dda82610d79565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610e0d57610e0c610e18565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b7f5769746864726177616c206661696c65642e0000000000000000000000000000600082015250565b7f596f75206e65656420746f207370656e64206d6f726520455448000000000000600082015250565b50565b610f3781610d3d565b8114610f4257600080fd5b50565b610f4e81610d4f565b8114610f5957600080fd5b50565b610f6581610d79565b8114610f7057600080fd5b50565b610f7c81610d83565b8114610f8757600080fd5b5056fea2646970667358221220680a69d572bb0ebf913c79a760873ef8449ab46cfab80cb26da7fe347e4d9e2664736f6c63430008070033",
  "deployedBytecode": "0x60806040526004361061007f5760003560e01c80639e87a5cd1161004e5780639e87a5cd14610154578063b60d42881461017f578063ba19e6c314610189578063d7b4750c146101b45761008e565b80630343fb25146100985780633ccfd60b146100d557806354861af7146100ec578063893d20e8146101295761008e565b3661008e5761008c6101f1565b005b6100966101f1565b005b3480156100a457600080fd5b506100bf60048036038101906100ba9190610918565b610341565b6040516100cc9190610b0e565b60405180910390f35b3480156100e157600080fd5b506100ea61038a565b005b3480156100f857600080fd5b50610113600480360381019061010e9190610945565b61062e565b6040516101209190610a98565b60405180910390f35b34801561013557600080fd5b5061013e61066d565b60405161014b9190610a98565b60405180910390f35b34801561016057600080fd5b50610169610695565b6040516101769190610ab3565b60405180910390f35b6101876101f1565b005b34801561019557600080fd5b5061019e6106bd565b6040516101ab9190610b0e565b60405180910390f35b3480156101c057600080fd5b506101db60048036038101906101d69190610945565b6106e5565b6040516101e89190610a98565b60405180910390f35b7f00000000000000000000000000000000000000000000000000000000000000006102457f00000000000000000000000000000000000000000000000000000000000000003461072c90919063ffffffff16565b1015610286576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027d90610aee565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546103389190610b45565b92505081905550565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461040f576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008080548060200260200160405190810160405280929190818152602001828054801561049257602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610448575b5050505050905060005b815181101561051d5760008282815181106104ba576104b9610e76565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061051590610dcf565b91505061049c565b50600067ffffffffffffffff81111561053957610538610ea5565b5b6040519080825280602002602001820160405280156105675781602001602082028036833780820191505090505b506000908051906020019061057d929190610808565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516105a490610a83565b60006040518083038185875af1925050503d80600081146105e1576040519150601f19603f3d011682016040523d82523d6000602084013e6105e6565b606091505b505090508061062a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062190610ace565b60405180910390fd5b5050565b6000818154811061063e57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b60008082815481106106fa576106f9610e76565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008061073883610768565b90506000670de0b6b3a764000085836107519190610ce3565b61075b9190610b9b565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156107b157600080fd5b505afa1580156107c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107e99190610972565b5050509150506402540be400816108009190610bcc565b915050919050565b828054828255906000526020600020908101928215610881579160200282015b828111156108805782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610828565b5b50905061088e9190610892565b5090565b5b808211156108ab576000816000905550600101610893565b5090565b6000813590506108be81610f2e565b92915050565b6000815190506108d381610f45565b92915050565b6000813590506108e881610f5c565b92915050565b6000815190506108fd81610f5c565b92915050565b60008151905061091281610f73565b92915050565b60006020828403121561092e5761092d610ed4565b5b600061093c848285016108af565b91505092915050565b60006020828403121561095b5761095a610ed4565b5b6000610969848285016108d9565b91505092915050565b600080600080600060a0868803121561098e5761098d610ed4565b5b600061099c88828901610903565b95505060206109ad888289016108c4565b94505060406109be888289016108ee565b93505060606109cf888289016108ee565b92505060806109e088828901610903565b9150509295509295909350565b6109f681610d3d565b82525050565b610a0581610d99565b82525050565b6000610a18601283610b34565b9150610a2382610ed9565b602082019050919050565b6000610a3b601a83610b34565b9150610a4682610f02565b602082019050919050565b6000610a5e600083610b29565b9150610a6982610f2b565b600082019050919050565b610a7d81610d79565b82525050565b6000610a8e82610a51565b9150819050919050565b6000602082019050610aad60008301846109ed565b92915050565b6000602082019050610ac860008301846109fc565b92915050565b60006020820190508181036000830152610ae781610a0b565b9050919050565b60006020820190508181036000830152610b0781610a2e565b9050919050565b6000602082019050610b236000830184610a74565b92915050565b600081905092915050565b600082825260208201905092915050565b6000610b5082610d79565b9150610b5b83610d79565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610b9057610b8f610e18565b5b828201905092915050565b6000610ba682610d79565b9150610bb183610d79565b925082610bc157610bc0610e47565b5b828204905092915050565b6000610bd782610d4f565b9150610be283610d4f565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610c2157610c20610e18565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610c5e57610c5d610e18565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610c9b57610c9a610e18565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610cd857610cd7610e18565b5b828202905092915050565b6000610cee82610d79565b9150610cf983610d79565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610d3257610d31610e18565b5b828202905092915050565b6000610d4882610d59565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b6000610da482610dab565b9050919050565b6000610db682610dbd565b9050919050565b6000610dc882610d59565b9050919050565b6000610dda82610d79565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610e0d57610e0c610e18565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b7f5769746864726177616c206661696c65642e0000000000000000000000000000600082015250565b7f596f75206e65656420746f207370656e64206d6f726520455448000000000000600082015250565b50565b610f3781610d3d565b8114610f4257600080fd5b50565b610f4e81610d4f565b8114610f5957600080fd5b50565b610f6581610d79565b8114610f7057600080fd5b50565b610f7c81610d83565b8114610f8757600080fd5b5056fea2646970667358221220680a69d572bb0ebf913c79a760873ef8449ab46cfab80cb26da7fe347e4d9e2664736f6c63430008070033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 60,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 64,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressAmountMap",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}