{
  "address": "0xAc7de9E0Ff68EFe90C9b152203fCeFcE055BD009",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_minUSD",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x69212f4804a39723f0aad4f25a932988a17925a53ede31c70544b6afe0a626f6",
  "receipt": {
    "to": null,
    "from": "0xbf072501E4596DA3eBAea9C6643b33E69241B463",
    "contractAddress": "0xAc7de9E0Ff68EFe90C9b152203fCeFcE055BD009",
    "transactionIndex": 11,
    "gasUsed": "747465",
    "logsBloom": "0x
    "blockHash": "0x45c895ee4f20f247e60bc057b251910986e04a8b4b316d2f0fa1ed81b5345722",
    "transactionHash": "0x69212f4804a39723f0aad4f25a932988a17925a53ede31c70544b6afe0a626f6",
    "logs": [],
    "blockNumber": 10823627,
    "cumulativeGasUsed": "27106420",
    "status": 1,
    "byzantium": true
  },
  "args": [
    50,
    "0x8A753747A1Fa494EC906cE90E9f37563A8AF630e"
  ],
  "numDeployments": 1,
  "solcInputHash": "848ce9dcfd26053bc33c5fb6f3b8e651",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_minUSD\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./PriceConverter.sol\\\";\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    constructor(uint256 _minUSD, address _priceFeedAddress) {\\n        i_owner = msg.sender;\\n        i_minUSD = _minUSD * 1e18;\\n        i_priceFeed = AggregatorV3Interface(_priceFeedAddress);\\n    }\\n\\n    uint256 immutable i_minUSD;\\n    address immutable i_owner;\\n    address[] funders;\\n    mapping(address => uint256) addressAmountMap;\\n    AggregatorV3Interface public immutable i_priceFeed;\\n\\n    function fund() public payable {\\n        require(\\n            msg.value.getConversion(i_priceFeed) >= i_minUSD,\\n            \\\"Funding amount should be greater than or equal to 10 dollars\\\"\\n        );\\n        funders.push(msg.sender);\\n        addressAmountMap[msg.sender] += msg.value;\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        for (uint256 i = 0; i < funders.length; i++) {\\n            addressAmountMap[funders[i]] = 0;\\n        }\\n        funders = new address[](0);\\n        (bool callSend, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSend, \\\"Withdrawal failed.\\\");\\n    }\\n\\n    modifier onlyOwner() {\\n        require(msg.sender == i_owner, \\\"You are not the owner\\\");\\n        _;\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n}\\n\",\"keccak256\":\"0x83a6a0b6610c82965908650a2e0e2e421e7ca49cb7c9e3e4161a3b887bca4075\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n    // get 1 eth price in usd\\n    function getPriceInUSD(AggregatorV3Interface priceFeed)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        (, int256 price, , , ) = priceFeed.latestRoundData();\\n        // will get price with 8 extra zeros\\n        return uint256(price * 1e10);\\n    }\\n\\n    // get x amount of eth in usd\\n    function getConversion(uint256 ethAmount, AggregatorV3Interface priceFeed)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        uint256 priceInUSD = getPriceInUSD(priceFeed);\\n        uint256 amount = (priceInUSD * ethAmount) / 1e18;\\n        return amount;\\n    }\\n}\\n\",\"keccak256\":\"0xeb13ba4e275492a6405d3f143fe07e36f6b4646a949ddaded82338b7569014dc\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60e06040523480156200001157600080fd5b5060405162000efa38038062000efa8339818101604052810190620000379190620000f8565b3373ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff1660601b81525050670de0b6b3a7640000826200008491906200013f565b608081815250508073ffffffffffffffffffffffffffffffffffffffff1660c08173ffffffffffffffffffffffffffffffffffffffff1660601b81525050505062000246565b600081519050620000db8162000212565b92915050565b600081519050620000f2816200022c565b92915050565b600080604083850312156200011257620001116200020d565b5b60006200012285828601620000e1565b92505060206200013585828601620000ca565b9150509250929050565b60006200014c82620001d4565b91506200015983620001d4565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615620001955762000194620001de565b5b828202905092915050565b6000620001ad82620001b4565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600080fd5b6200021d81620001a0565b81146200022957600080fd5b50565b6200023781620001d4565b81146200024357600080fd5b50565b60805160a05160601c60c05160601c610c79620002816000396000818160c30152610432015260006101ef01526000609f0152610c796000f3fe6080604052600436106100385760003560e01c80633ccfd60b14610051578063957b895614610068578063b60d42881461009357610047565b366100475761004561009d565b005b61004f61009d565b005b34801561005d57600080fd5b506100666101ed565b005b34801561007457600080fd5b5061007d610430565b60405161008a9190610741565b60405180910390f35b61009b61009d565b005b7f00000000000000000000000000000000000000000000000000000000000000006100f17f00000000000000000000000000000000000000000000000000000000000000003461045490919063ffffffff16565b1015610132576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101299061075c565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546101e491906107d8565b92505081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461027b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102729061079c565b60405180910390fd5b60005b600080549050811015610320576000600160008084815481106102a4576102a3610af7565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550808061031890610a50565b91505061027e565b50600067ffffffffffffffff81111561033c5761033b610b26565b5b60405190808252806020026020018201604052801561036a5781602001602082028036833780820191505090505b5060009080519060200190610380929190610530565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516103a79061072c565b60006040518083038185875af1925050503d80600081146103e4576040519150601f19603f3d011682016040523d82523d6000602084013e6103e9565b606091505b505090508061042d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104249061077c565b60405180910390fd5b50565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008061046083610490565b90506000670de0b6b3a764000085836104799190610976565b610483919061082e565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156104d957600080fd5b505afa1580156104ed573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105119190610616565b5050509150506402540be40081610528919061085f565b915050919050565b8280548282559060005260206000209081019282156105a9579160200282015b828111156105a85782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610550565b5b5090506105b691906105ba565b5090565b5b808211156105d35760008160009055506001016105bb565b5090565b6000815190506105e681610bfe565b92915050565b6000815190506105fb81610c15565b92915050565b60008151905061061081610c2c565b92915050565b600080600080600060a0868803121561063257610631610b55565b5b600061064088828901610601565b9550506020610651888289016105d7565b9450506040610662888289016105ec565b9350506060610673888289016105ec565b925050608061068488828901610601565b9150509295509295909350565b61069a81610a1a565b82525050565b60006106ad603c836107c7565b91506106b882610b5a565b604082019050919050565b60006106d06012836107c7565b91506106db82610ba9565b602082019050919050565b60006106f36015836107c7565b91506106fe82610bd2565b602082019050919050565b60006107166000836107bc565b915061072182610bfb565b600082019050919050565b600061073782610709565b9150819050919050565b60006020820190506107566000830184610691565b92915050565b60006020820190508181036000830152610775816106a0565b9050919050565b60006020820190508181036000830152610795816106c3565b9050919050565b600060208201905081810360008301526107b5816106e6565b9050919050565b600081905092915050565b600082825260208201905092915050565b60006107e3826109fa565b91506107ee836109fa565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561082357610822610a99565b5b828201905092915050565b6000610839826109fa565b9150610844836109fa565b92508261085457610853610ac8565b5b828204905092915050565b600061086a826109d0565b9150610875836109d0565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821160008413600084131616156108b4576108b3610a99565b5b817f800000000000000000000000000000000000000000000000000000000000000005831260008412600084131616156108f1576108f0610a99565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561092e5761092d610a99565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561096b5761096a610a99565b5b828202905092915050565b6000610981826109fa565b915061098c836109fa565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156109c5576109c4610a99565b5b828202905092915050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b6000610a2582610a2c565b9050919050565b6000610a3782610a3e565b9050919050565b6000610a49826109da565b9050919050565b6000610a5b826109fa565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610a8e57610a8d610a99565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b7f46756e64696e6720616d6f756e742073686f756c64206265206772656174657260008201527f207468616e206f7220657175616c20746f20313020646f6c6c61727300000000602082015250565b7f5769746864726177616c206661696c65642e0000000000000000000000000000600082015250565b7f596f7520617265206e6f7420746865206f776e65720000000000000000000000600082015250565b50565b610c07816109d0565b8114610c1257600080fd5b50565b610c1e816109fa565b8114610c2957600080fd5b50565b610c3581610a04565b8114610c4057600080fd5b5056fea26469706673582212203174a10b529f56125c99c0a5e8d85ca445326b06c9dc86b0555eea4d5799a97a64736f6c63430008070033",
  "deployedBytecode": "0x6080604052600436106100385760003560e01c80633ccfd60b14610051578063957b895614610068578063b60d42881461009357610047565b366100475761004561009d565b005b61004f61009d565b005b34801561005d57600080fd5b506100666101ed565b005b34801561007457600080fd5b5061007d610430565b60405161008a9190610741565b60405180910390f35b61009b61009d565b005b7f00000000000000000000000000000000000000000000000000000000000000006100f17f00000000000000000000000000000000000000000000000000000000000000003461045490919063ffffffff16565b1015610132576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101299061075c565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546101e491906107d8565b92505081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461027b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102729061079c565b60405180910390fd5b60005b600080549050811015610320576000600160008084815481106102a4576102a3610af7565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550808061031890610a50565b91505061027e565b50600067ffffffffffffffff81111561033c5761033b610b26565b5b60405190808252806020026020018201604052801561036a5781602001602082028036833780820191505090505b5060009080519060200190610380929190610530565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516103a79061072c565b60006040518083038185875af1925050503d80600081146103e4576040519150601f19603f3d011682016040523d82523d6000602084013e6103e9565b606091505b505090508061042d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104249061077c565b60405180910390fd5b50565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008061046083610490565b90506000670de0b6b3a764000085836104799190610976565b610483919061082e565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156104d957600080fd5b505afa1580156104ed573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105119190610616565b5050509150506402540be40081610528919061085f565b915050919050565b8280548282559060005260206000209081019282156105a9579160200282015b828111156105a85782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610550565b5b5090506105b691906105ba565b5090565b5b808211156105d35760008160009055506001016105bb565b5090565b6000815190506105e681610bfe565b92915050565b6000815190506105fb81610c15565b92915050565b60008151905061061081610c2c565b92915050565b600080600080600060a0868803121561063257610631610b55565b5b600061064088828901610601565b9550506020610651888289016105d7565b9450506040610662888289016105ec565b9350506060610673888289016105ec565b925050608061068488828901610601565b9150509295509295909350565b61069a81610a1a565b82525050565b60006106ad603c836107c7565b91506106b882610b5a565b604082019050919050565b60006106d06012836107c7565b91506106db82610ba9565b602082019050919050565b60006106f36015836107c7565b91506106fe82610bd2565b602082019050919050565b60006107166000836107bc565b915061072182610bfb565b600082019050919050565b600061073782610709565b9150819050919050565b60006020820190506107566000830184610691565b92915050565b60006020820190508181036000830152610775816106a0565b9050919050565b60006020820190508181036000830152610795816106c3565b9050919050565b600060208201905081810360008301526107b5816106e6565b9050919050565b600081905092915050565b600082825260208201905092915050565b60006107e3826109fa565b91506107ee836109fa565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561082357610822610a99565b5b828201905092915050565b6000610839826109fa565b9150610844836109fa565b92508261085457610853610ac8565b5b828204905092915050565b600061086a826109d0565b9150610875836109d0565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821160008413600084131616156108b4576108b3610a99565b5b817f800000000000000000000000000000000000000000000000000000000000000005831260008412600084131616156108f1576108f0610a99565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561092e5761092d610a99565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561096b5761096a610a99565b5b828202905092915050565b6000610981826109fa565b915061098c836109fa565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156109c5576109c4610a99565b5b828202905092915050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b6000610a2582610a2c565b9050919050565b6000610a3782610a3e565b9050919050565b6000610a49826109da565b9050919050565b6000610a5b826109fa565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610a8e57610a8d610a99565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b7f46756e64696e6720616d6f756e742073686f756c64206265206772656174657260008201527f207468616e206f7220657175616c20746f20313020646f6c6c61727300000000602082015250565b7f5769746864726177616c206661696c65642e0000000000000000000000000000600082015250565b7f596f7520617265206e6f7420746865206f776e65720000000000000000000000600082015250565b50565b610c07816109d0565b8114610c1257600080fd5b50565b610c1e816109fa565b8114610c2957600080fd5b50565b610c3581610a04565b8114610c4057600080fd5b5056fea26469706673582212203174a10b529f56125c99c0a5e8d85ca445326b06c9dc86b0555eea4d5799a97a64736f6c63430008070033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 83,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 87,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressAmountMap",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}